{"version":3,"sources":["../../src/react-pan-zoom-rotate.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["ReactPanZoom","getInitialState","pandx","pandy","zoom","comesFromDragging","dragData","dx","dy","x","y","dragging","matrixData","mouseDown","state","reset","onClick","onTouchStart","e","pageX","pageY","onTouchEnd","onTouchMove","onMouseDown","panStart","newDragData","event","onMouseUp","panEnd","onMouseMove","onWheel","Math","onMouseEnter","document","passive","onMouseLeave","updateMousePosition","getNewMatrixData","deltaX","deltaY","componentWillReceiveProps","this","nextProps","newMatrixData","render","className","props","style","height","userSelect","width","ref","transform","preventDefault","window","React","enablePan","onPan","onReset","rotation","image","alt","setDx","setDy","setZoom","setRotation","flip","setFlip","position","right","zIndex","top","borderRadius","background","boxShadow","textAlign","cursor","borderBottom","padding","boxSizing","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","display","justifyContent","alignItems","key","src","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1aeccebe.chunk.js","sourcesContent":["import * as React from 'react'\n\nexport interface IDragData {\n  x: number\n  y: number\n  dx: number\n  dy: number\n}\n\nexport interface IReactPanZoomStateType {\n  dragging: boolean\n  mouseDown: boolean\n  comesFromDragging: boolean\n  dragData: IDragData\n  matrixData: number[]\n}\nexport interface IReactPanZoomProps {\n  height?: string\n  width?: string\n  className?: string\n  enablePan?: boolean\n  reset?: () => void\n  zoom?: number\n  pandx?: number\n  pandy?: number\n  rotation?: number\n  onPan?: (x: number, y: number) => void\n  setZoom: (z: number) => void\n  onReset?: (dx: number, dy: number, zoom: number) => void\n  onClick?: (e: React.MouseEvent<any>) => void\n  style?: {}\n}\nexport default class ReactPanZoom extends React.PureComponent<\n  IReactPanZoomProps,\n  IReactPanZoomStateType\n> {\n  // In strict null checking setting default props doesn't seem to work. Hence the non-null assertion.\n  // :crossedfingers: it shouldn't be deprecated. Or the very least support defaultProps semantics as proposed\n  // in this PR: https://github.com/Microsoft/TypeScript/issues/23812\n  public static defaultProps: Partial<IReactPanZoomProps> = {\n    enablePan: true,\n    onPan: () => undefined,\n    onReset: () => undefined,\n    pandx: 0,\n    pandy: 0,\n    zoom: 0,\n    rotation: 0\n  }\n\n  private panWrapper: any\n\n  private panContainer: any\n  private getInitialState = () => {\n    const { pandx, pandy, zoom } = this.props\n    const defaultDragData = {\n      dx: pandx!,\n      dy: pandy!,\n      x: 0,\n      y: 0\n    }\n    return {\n      comesFromDragging: false,\n      dragData: defaultDragData,\n      dragging: false,\n      matrixData: [\n        zoom!,\n        0,\n        0,\n        zoom!,\n        pandx!,\n        pandy! // [zoom, skew, skew, zoom, dx, dy]\n      ],\n      mouseDown: false\n    }\n  }\n\n  public state = this.getInitialState()\n\n  public componentWillReceiveProps(nextProps: IReactPanZoomProps) {\n    const { matrixData } = this.state\n    if (matrixData[0] !== nextProps.zoom) {\n      const newMatrixData = [...this.state.matrixData]\n      newMatrixData[0] = nextProps.zoom || newMatrixData[0]\n      newMatrixData[3] = nextProps.zoom || newMatrixData[3]\n      this.setState({\n        matrixData: newMatrixData\n      })\n    }\n  }\n\n  public reset = () => {\n    const matrixData = [0.4, 0, 0, 0.4, 0, 0]\n    this.setState({ matrixData })\n    if (this.props.onReset) {\n      this.props.onReset(0, 0, 1)\n    }\n  }\n\n  // tslint:disable-next-line: member-ordering\n  public onClick = (e: React.MouseEvent<EventTarget>) => {\n    if (this.state.comesFromDragging) {\n      return\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e)\n    }\n  }\n\n  // tslint:disable-next-line: member-ordering\n  public onTouchStart = (e: React.TouchEvent<EventTarget>) => {\n    const { pageX, pageY } = e.touches[0]\n    this.panStart(pageX, pageY, e)\n  }\n\n  // tslint:disable-next-line: member-ordering\n  public onTouchEnd = () => {\n    this.onMouseUp()\n  }\n\n  // tslint:disable-next-line: member-ordering\n  public onTouchMove = (e: React.TouchEvent<EventTarget>) => {\n    this.updateMousePosition(e.touches[0].pageX, e.touches[0].pageY)\n  }\n\n  // tslint:disable-next-line: member-ordering\n  public render() {\n    return (\n      <div\n        className={`pan-container ${this.props.className || ''}`}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onTouchStart={this.onTouchStart}\n        onTouchMove={this.onTouchMove}\n        onTouchEnd={this.onTouchEnd}\n        onMouseMove={this.onMouseMove}\n        onWheel={this.onWheel}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onClick={this.onClick}\n        style={{\n          height: this.props.height,\n          userSelect: 'none',\n          width: this.props.width\n        }}\n        ref={(ref) => (this.panWrapper = ref)}\n      >\n        <div\n          ref={(ref) => (ref ? (this.panContainer = ref) : null)}\n          style={{\n            transform: `matrix(${this.state.matrixData.toString()})`\n          }}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n\n  private onMouseDown = (e: React.MouseEvent<EventTarget>) => {\n    this.panStart(e.pageX, e.pageY, e)\n  }\n\n  private panStart = (\n    pageX: number,\n    pageY: number,\n    event: React.MouseEvent<EventTarget> | React.TouchEvent<EventTarget>\n  ) => {\n    if (!this.props.enablePan) {\n      return\n    }\n\n    const { matrixData } = this.state\n    const offsetX = matrixData[4]\n    const offsetY = matrixData[5]\n    const newDragData: IDragData = {\n      dx: offsetX,\n      dy: offsetY,\n      x: pageX,\n      y: pageY\n    }\n    this.setState({\n      dragData: newDragData,\n      mouseDown: true\n    })\n    if (this.panWrapper) {\n      this.panWrapper.style.cursor = 'move'\n    }\n    event.stopPropagation()\n    event.nativeEvent.stopImmediatePropagation()\n    event.preventDefault()\n  }\n\n  private onMouseUp = () => {\n    this.panEnd()\n  }\n\n  private panEnd = () => {\n    this.setState({\n      comesFromDragging: this.state.dragging,\n      dragging: false,\n      mouseDown: false\n    })\n    if (this.panWrapper) {\n      this.panWrapper.style.cursor = ''\n    }\n    if (this.props.onPan) {\n      this.props.onPan(this.state.matrixData[4], this.state.matrixData[5])\n    }\n  }\n\n  public preventDefault(e: any) {\n    e = e || window.event\n    if (e.preventDefault) {\n      e.preventDefault()\n    }\n    e.returnValue = false\n  }\n\n  private onMouseMove = (e: React.MouseEvent<EventTarget>) => {\n    this.updateMousePosition(e.pageX, e.pageY)\n  }\n\n  private onWheel = (e: React.WheelEvent<EventTarget>) => {\n    Math.sign(e.deltaY) < 0\n      ? this.props.setZoom((this.props.zoom || 0) + 0.1)\n      : (this.props.zoom || 0) > 1 &&\n        this.props.setZoom((this.props.zoom || 0) - 0.1)\n  }\n\n  private onMouseEnter = () => {\n    document.addEventListener('wheel', this.preventDefault, {\n      passive: false\n    })\n  }\n\n  private onMouseLeave = () => {\n    document.removeEventListener('wheel', this.preventDefault, false)\n  }\n\n  private updateMousePosition = (pageX: number, pageY: number) => {\n    if (!this.state.mouseDown) return\n\n    const matrixData = this.getNewMatrixData(pageX, pageY)\n    this.setState({\n      dragging: true,\n      matrixData\n    })\n    if (this.panContainer) {\n      this.panContainer.style.transform = `matrix(${this.state.matrixData.toString()})`\n    }\n  }\n\n  private getNewMatrixData = (x: number, y: number): number[] => {\n    const { dragData, matrixData } = this.state\n    const deltaX = dragData.x - x\n    const deltaY = dragData.y - y\n    matrixData[4] = dragData.dx - deltaX\n    matrixData[5] = dragData.dy - deltaY\n    return matrixData\n  }\n}\n","import * as React from 'react'\nimport ReactPanZoom from './react-pan-zoom-rotate'\n\n// box-shadow: 0px 0px 5px 1px #0c0c0c;\n\ntype PanViewerProps = {\n  image: string\n  alt?: string\n  ref?: any\n}\n\nconst PanViewer = ({ image, alt, ref }: PanViewerProps) => {\n  const [dx, setDx] = React.useState(0)\n  const [dy, setDy] = React.useState(0)\n  const [zoom, setZoom] = React.useState(1)\n  const [rotation, setRotation] = React.useState(0)\n  const [flip, setFlip] = React.useState(false)\n\n  const zoomIn = () => {\n    setZoom(zoom + 0.2)\n  }\n\n  const zoomOut = () => {\n    if (zoom >= 1) {\n      setZoom(zoom - 0.2)\n    }\n  }\n\n  const rotateLeft = () => {\n    if (rotation === -3) {\n      setRotation(0)\n    } else {\n      setRotation(rotation - 1)\n    }\n  }\n\n  const flipImage = () => {\n    setFlip(!flip)\n  }\n\n  const onPan = (dx: number, dy: number) => {\n    setDx(dx)\n    setDy(dy)\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          position: 'absolute',\n          right: '10px',\n          zIndex: 2,\n          top: 10,\n          userSelect: 'none',\n          borderRadius: 2,\n          background: '#fff',\n          boxShadow: '0px 2px 6px rgba(53, 67, 93, 0.32)'\n        }}\n      >\n        <div\n          onClick={zoomIn}\n          style={{\n            textAlign: 'center',\n            cursor: 'pointer',\n            height: 40,\n            width: 40,\n            borderBottom: ' 1px solid #ccc'\n          }}\n        >\n          <svg\n            style={{\n              height: '100%',\n              width: '100%',\n              padding: 10,\n              boxSizing: 'border-box'\n            }}\n            width='24'\n            height='24'\n            viewBox='0 0 24 24'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n          >\n            <path\n              d='M4 12H20'\n              stroke='#4C68C1'\n              strokeWidth='2'\n              strokeLinecap='round'\n            />\n            <path\n              d='M12 4L12 20'\n              stroke='#4C68C1'\n              strokeWidth='2'\n              strokeLinecap='round'\n            />\n          </svg>\n        </div>\n        <div\n          onClick={zoomOut}\n          style={{\n            textAlign: 'center',\n            cursor: 'pointer',\n            height: 40,\n            width: 40,\n            borderBottom: ' 1px solid #ccc'\n          }}\n        >\n          <svg\n            style={{\n              height: '100%',\n              width: '100%',\n              padding: 10,\n              boxSizing: 'border-box'\n            }}\n            width='24'\n            height='24'\n            viewBox='0 0 24 24'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n          >\n            <path\n              d='M4 12H20'\n              stroke='#4C68C1'\n              strokeWidth='2'\n              strokeLinecap='round'\n            />\n          </svg>\n        </div>\n        <div\n          onClick={rotateLeft}\n          style={{\n            textAlign: 'center',\n            cursor: 'pointer',\n            height: 40,\n            width: 40,\n            borderBottom: ' 1px solid #ccc'\n          }}\n        >\n          <svg\n            style={{\n              height: '100%',\n              width: '100%',\n              padding: 10,\n              boxSizing: 'border-box'\n            }}\n            width='24'\n            height='24'\n            viewBox='0 0 24 24'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n          >\n            <path\n              d='M14 15L9 20L4 15'\n              stroke='#4C68C1'\n              strokeWidth='2'\n              strokeLinecap='round'\n              strokeLinejoin='round'\n            />\n            <path\n              d='M20 4H13C10.7909 4 9 5.79086 9 8V20'\n              stroke='#4C68C1'\n              strokeWidth='2'\n              strokeLinecap='round'\n              strokeLinejoin='round'\n            />\n          </svg>\n        </div>\n        <div\n          onClick={flipImage}\n          style={{\n            textAlign: 'center',\n            cursor: 'pointer',\n            height: 40,\n            width: 40\n          }}\n        >\n          <svg\n            style={{\n              height: '100%',\n              width: '100%',\n              padding: 10,\n              boxSizing: 'border-box'\n            }}\n            width='24'\n            height='24'\n            viewBox='0 0 24 24'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n          >\n            <path\n              stroke='#4C68C1'\n              strokeWidth='2'\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              d='M9.178,18.799V1.763L0,18.799H9.178z M8.517,18.136h-7.41l7.41-13.752V18.136z'\n            />\n            <polygon\n              stroke='#4C68C1'\n              strokeWidth='2'\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              points='11.385,1.763 11.385,18.799 20.562,18.799 '\n            />\n          </svg>\n        </div>\n      </div>\n      <ReactPanZoom\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          zIndex: 1\n        }}\n        zoom={zoom}\n        setZoom={setZoom}\n        pandx={dx}\n        pandy={dy}\n        onPan={onPan}\n        rotation={rotation}\n        key={dx}\n      >\n        <img\n          style={{\n            transform: `rotate(${rotation * 90}deg) scaleX(${flip ? -1 : 1})`,\n            width: '100%'\n          }}\n          src={image}\n          alt={alt}\n          ref={ref}\n        />\n      </ReactPanZoom>\n    </div>\n  )\n}\n\nexport default PanViewer\n","import React from 'react'\n\nimport ReactPanZoom from 'react-image-pan-zoom-rotate'\n\nconst App = () => {\n  return (\n    <ReactPanZoom\n      image='https://images.unsplash.com/photo-1551091708-fda32ed3178c'\n      alt='document image'\n    />\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}